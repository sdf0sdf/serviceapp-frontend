{"remainingRequest":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/babel-loader/lib/index.js!/home/shepeleva-ls/vue/vue-crash-2021/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/shepeleva-ls/vue/vue-crash-2021/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/shepeleva-ls/vue/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/shepeleva-ls/vue/vue-crash-2021/src/views/People.vue?vue&type=template&id=69ca65c9","dependencies":[{"path":"/home/shepeleva-ls/vue/vue-crash-2021/src/views/People.vue","mtime":1619984858880},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgdlNob3cgYXMgX3ZTaG93LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9BZGRQZXJzb24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiQWRkUGVyc29uIik7CgogIHZhciBfY29tcG9uZW50X19zZWxmID0gX3Jlc29sdmVDb21wb25lbnQoIl9zZWxmIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQWRkUGVyc29uLCB7CiAgICBvbkFkZFBlcnNvbjogJG9wdGlvbnMuYWRkUGVyc29uCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbIm9uQWRkUGVyc29uIl0pLCBbW192U2hvdywgJHByb3BzLnNob3dBZGRQZXJzb25dXSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X19zZWxmLCB7CiAgICBvbkRlbGV0ZVBlcnNvbjogJG9wdGlvbnMuZGVsZXRlUGVyc29uLAogICAgcGVvcGxlOiAkZGF0YS5wZW9wbGUKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25EZWxldGVQZXJzb24iLCAicGVvcGxlIl0pXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9"},{"version":3,"sources":["/home/shepeleva-ls/vue/vue-crash-2021/src/views/People.vue"],"names":[],"mappings":";;;;;;sEACE,YAAA,CAA4D,oBAA5D,EAA4D;AAAzB,IAAA,WAAU,EAAE,QAAA,CAAA;AAAa,GAA5D,EAAwD,IAAxD,EAAwD;AAAA;AAAxD,IAAwD,CAAA,aAAA,CAAxD,C,EAAwD,C,SAArC,MAAA,CAAA,a,CAAqC,C,GACxD,YAAA,CAGE,gBAHF,EAGE;AAFC,IAAA,cAAa,EAAE,QAAA,CAAA,YAEhB;AADC,IAAA,MAAM,EAAE,KAAA,CAAA;AACT,GAHF,E,IAAA,E;;AAAA,I,4BAAA,C","sourcesContent":["<template>\n  <AddPerson v-show=\"showAddPerson\" @add-person=\"addPerson\" />\n  <People\n    @delete-person=\"deletePerson\"\n    :people=\"people\"\n  />\n</template>\n\n<script>\nimport People from '../components/People'\nimport AddPerson from '../components/AddPerson'\nexport default {\n  name: 'People',\n  props: {\n    showAddPerson: Boolean,\n  },\n  components: {\n    People,\n    AddPerson,\n  },\n  data() {\n    return {\n      people: [],\n    }\n  },\n  methods: {\n    async addPerson(person) {\n      const res = await fetch('api/people', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(person),\n      })\n\n      const data = await res.json()\n\n      this.people = [...this.people, data]\n    },\n    async deletePerson(id) {\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`api/people/${id}`, {\n          method: 'DELETE',\n        })\n\n        res.status === 200\n          ? (this.people = this.people.filter((person) => person.id !== id))\n          : alert('Error deleting person')\n      }\n    },\n    // !!! updatePerson (id)\n    // async toggleReminder(id) {\n    //   const taskToToggle = await this.fetchTask(id)\n    //   const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    //   const res = await fetch(`api/tasks/${id}`, {\n    //     method: 'PUT',\n    //     headers: {\n    //       'Content-type': 'application/json',\n    //     },\n    //     body: JSON.stringify(updTask),\n    //   })\n\n    //   const data = await res.json()\n\n    //   this.tasks = this.tasks.map((task) =>\n    //     task.id === id ? { ...task, reminder: data.reminder } : task\n    //   )\n    // },\n    async fetchPeople() {\n      const res = await fetch('api/people')\n\n      const data = await res.json()\n\n      return data\n    },\n    async fetchPerson(id) {\n      const res = await fetch(`api/people/${id}`)\n\n      const data = await res.json()\n\n      return data\n    },\n  },\n  async created() {\n    this.people = await this.fetchPeople()\n  },\n}\n</script>"],"sourceRoot":""}]}