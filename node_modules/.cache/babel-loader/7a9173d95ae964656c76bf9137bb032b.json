{"remainingRequest":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/babel-loader/lib/index.js!/home/shepeleva-ls/vue/vue-crash-2021/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/shepeleva-ls/vue/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/shepeleva-ls/vue/vue-crash-2021/src/views/Persons.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/shepeleva-ls/vue/vue-crash-2021/src/views/Persons.vue","mtime":1620329068981},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shepeleva-ls/vue/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/shepeleva-ls/vue/vue-crash-2021/src/views/Persons.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <AddPerson ref=\"AddPerson\" v-show=\"showAdd\" @add-person=\"addPerson\" @update-person=\"updatePerson\" @toggle-add=\"toggleAdd\" :showAdd=\"showAdd\"/>\n  <People\n    @delete-person=\"deletePerson\"\n    @toggle-update=\"toggleUpdate\"\n    :people=\"people\"\n  />\n</template>\n\n<script>\nimport People from '../components/People'\nimport AddPerson from '../components/AddPerson'\nexport default {\n  name: 'Persons',\n  components: {\n    People,\n    AddPerson,\n  },\n  data() {\n    return {\n      people: [],\n      url: 'http://127.0.0.1:8080/ServiceApp/people',\n      showAdd: false,\n    }\n  },\n  methods: {\n    toggleUpdate(person){\n      this.$refs.AddPerson.id = person.id\n      this.$refs.AddPerson.name = person.name\n      this.$refs.AddPerson.age = person.age\n      this.$refs.AddPerson.email = person.email\n      this.showAdd = true\n\n    },\n    toggleAdd() {\n      this.$refs.AddPerson.id = ''\n      this.$refs.AddPerson.name = ''\n      this.$refs.AddPerson.age = ''\n      this.$refs.AddPerson.email = ''\n      this.showAdd = !this.showAdd\n    },\n    async addPerson(person) {\n      const res = await fetch(this.url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(person),\n      })\n\n      this.people = [...this.people, person]\n    },\n    async deletePerson(id) {\n      if (confirm('Are you sure?')) {\n        const res = await fetch(this.url + `/${id}`, {\n          method: 'DELETE',\n        })\n\n        res.status === 200\n          ? (this.people = this.people.filter((person) => person.id !== id))\n          : alert('Error deleting person')\n      }\n    },\n    async updatePerson(person) {\n      const res = await fetch(this.url + `/${person.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(person),\n      })\n\n      this.people = [...this.people, person]\n    },\n    async fetchPeople() {\n      const res = await fetch(this.url)\n\n      const data = await res.json()\n\n      return data\n    },\n    async fetchPerson(id) {\n      const res = await fetch(this.url + `/${id}`)\n\n      const data = await res.json()\n\n      return data\n    },\n  },\n  async created() {\n    this.people = await this.fetchPeople()\n  },\n}\n</script>"],"sourceRoot":""}]}